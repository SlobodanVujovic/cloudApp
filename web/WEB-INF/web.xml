<?xml version="1.0" encoding="UTF-8"?>
<web-app version="3.1" xmlns="http://xmlns.jcp.org/xml/ns/javaee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd">
    <context-param>
        <param-name>javax.faces.PROJECT_STAGE</param-name>
        <param-value>Development</param-value>
    </context-param>
    <context-param>
        <param-name>javax.faces.FACELETS_SKIP_COMMENTS</param-name>
        <param-value>true</param-value>
    </context-param>
    <!-- Kada se koriste flow-ovi, onda se ovaj mod automatski ukljucuje. Da se prilikom deploy-menta ne bi izbacivao
    warning o promeni moda, odmah ga set-ujemo i gledamo da log-ovi nemaju ni 1 warning. Jedino tako mezemo biti sigurni
    da aplikacija radi onako kako zelimo a ne da se u pozadini nesto promenilo a da mi toga nismo svesni.-->
    <context-param>
        <param-name>javax.faces.CLIENT_WINDOW_MODE</param-name>
        <param-value>url</param-value>
    </context-param>
    
    <servlet>
        <servlet-name>Faces Servlet</servlet-name>
        <servlet-class>javax.faces.webapp.FacesServlet</servlet-class>
        <!-- Broj 1 kaze da se init() metod Faces Servlet-a pokrene 1. od svih servlet-a u app.
        Nakon pokretanja web server-a vrsi se pokretanje servlet kontenjera (Apache Tomcat, WildFly, GlassFish).
        Zatim, nakon load-a i deploy-a web aplikacija, vrsi se kreiranje ServletContext-a. Zatim se vrsi instantiation servlet-a,
        filter-a i listener-a. I to servlet-a redom koji govori ovaj broj.-->
        <load-on-startup>1</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>Faces Servlet</servlet-name>
        <url-pattern>/faces/*</url-pattern>
    </servlet-mapping>
    <session-config>
        <!-- The HttpSession stays alive until it has not been used for more than the timeout value specified in <session-timeout>.
        The timeout value defaults to 30 minutes. So, when the client doesn't visit the web app for longer than the time specified,
        the servlet container trashes the session. Every subsequent request will not have access to the same session anymore; 
        the servlet container will create a new session.-->
        <session-timeout>
            30
        </session-timeout>
    </session-config>
    
    <welcome-file-list>
        <welcome-file>faces/sections/home.xhtml</welcome-file>
    </welcome-file-list>
    
    <!-- Ovako definisemo koja strana ce se ucitati kada se prepozna navedena greska ili exception.
    Obrati paznju da je potrebno ukljuciti i "/faces" u putanju ka view-u. U suprotnom .xhtml ne prolazi kroz Faces Servlet
    i stranica se ne renderuje kako bi trebalo. -->
    <error-page>
        <exception-type>javax.faces.application.ViewExpiredException</exception-type>
        <location>/faces/error/expired.xhtml</location>
    </error-page>
    <error-page>
        <error-code>404</error-code>
        <location>/faces/error/error.xhtml</location>
    </error-page>
    <!-- "General" error page should be mapped on <error-code> of 500 instead of an <exception-type> of e.g. java.lang.Exception or 
    java.lang.Throwable, otherwise all exceptions wrapped in ServletException such as ViewExpiredException would still end up in the 
    general error page.--> 
    <error-page>
        <error-code>500</error-code>
        <location>/faces/error/error.xhtml</location>
    </error-page>
    <error-page>
        <exception-type>org.jboss.weld.context.ContextNotActiveException</exception-type>
        <location>/faces/error/error.xhtml</location>
    </error-page>
    
    <!-- Kada koristimo JPA API za komunikaciju sa bazom onda se u okviru persistence.xml-a definise
    resource reference tako da <resource-ref> tag ovde nije potreban (proveriti)-->
    <resource-ref>
        <description>Connects to database for cloudApp.</description>
        <res-ref-name>jdbc/cloudapp</res-ref-name>
        <res-type>javax.sql.ConnectionPoolDataSource</res-type>
        <res-auth>Container</res-auth>
        <res-sharing-scope>Shareable</res-sharing-scope>
    </resource-ref>
</web-app>
